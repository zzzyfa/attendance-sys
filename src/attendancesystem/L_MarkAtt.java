/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package attendancesystem;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Calendar;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.table.TableColumn;

/**
 *
 * @author User
 */
public class L_MarkAtt extends javax.swing.JFrame {

    
    /**
     * Creates new form L_MarkAtt
     */
    public L_MarkAtt() {
        initComponents();
        Date currentDate = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String format = formatter.format(currentDate);

        
        
    labDate.setText(format);}
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabStu = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        comIntake = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        comTime = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        labDate = new javax.swing.JLabel();
        labModuleName = new javax.swing.JLabel();
        butGetList = new javax.swing.JButton();
        butSave = new javax.swing.JButton();
        butBack = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "UserID", "Attendance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Mark Attendance");

        TabStu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TabStu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserID", "Name", "Attendance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabStu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(TabStu);
        if (TabStu.getColumnModel().getColumnCount() > 0) {
            TabStu.getColumnModel().getColumn(0).setMaxWidth(100);
            TabStu.getColumnModel().getColumn(1).setMinWidth(200);
            TabStu.getColumnModel().getColumn(1).setMaxWidth(600);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        comIntake.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comIntake.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "UC1F1701IT", "UCDF1509BIT" }));
        comIntake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comIntakeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Module:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Date:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Time:");

        comTime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8:00-10:00", "10:00-12:00", "13:00-15:00", "16:00-18:00" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Intake:");

        labDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labDate.setText("Date");
        labDate.setToolTipText("");
        labDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labModuleName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labModuleName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        butGetList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        butGetList.setText("Get List");
        butGetList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butGetListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labDate, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labModuleName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(comIntake, 0, 1, Short.MAX_VALUE))))
                .addContainerGap(51, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(butGetList)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comIntake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labModuleName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(labDate))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(butGetList, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        butSave.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        butSave.setText("Save");
        butSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSaveActionPerformed(evt);
            }
        });

        butBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        butBack.setText("Back");
        butBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(butBack)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(butSave)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(butBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(butSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butGetListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butGetListActionPerformed
        String today = labDate.getText();
    


        DefaultTableModel tm = (DefaultTableModel) TabStu.getModel();
        tm.setRowCount(0);
        String intake = comIntake.getSelectedItem().toString();
        String module = labModuleName.getText();
        String time = comTime.getSelectedItem().toString();

        try {
            
                BufferedReader in = new BufferedReader(new java.io.FileReader(intake+"_Attendance"+".txt"));
                String line;

                while ((line = in.readLine()) != null) {

                    tm.addRow(line.split(";"));
                    //  JOptionPane.showMessageDialog(null,line.split("/"));

                }
                in.close();
            
           
            
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Please select an intake.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        TableColumn col = TabStu.getColumnModel().getColumn(2);
        JComboBox com = new JComboBox();
        com.addItem("Present");
        com.addItem("Late");
        com.addItem("Absent");
        col.setCellEditor(new DefaultCellEditor(com));
    }//GEN-LAST:event_butGetListActionPerformed

    private void comIntakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comIntakeActionPerformed
        // TODO add your handling code here:
        if (comIntake.getSelectedItem().toString().equals("UC1F1701IT")) {
            labModuleName.setText("VBN");
        };

        if (comIntake.getSelectedItem().toString().equals("UCDF1509BIT")) {
            labModuleName.setText("MTK");
        }

    }//GEN-LAST:event_comIntakeActionPerformed

    private void butSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSaveActionPerformed
// TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel) TabStu.getModel();
        TableColumn col = TabStu.getColumnModel().getColumn(2);
        String today = labDate.getText();

        JComboBox com = new JComboBox();
        com.addItem("Present");
        com.addItem("Late");
        com.addItem("Absent");
        col.setCellEditor(new DefaultCellEditor(com));

        String[] records = null;
        
        String att = com.getSelectedItem().toString();
        String intake = comIntake.getSelectedItem().toString();
        String module = labModuleName.getText();
        String time = comTime.getSelectedItem().toString();
        String line;


        try
        {        

            File lect = new File(intake+module+today+".txt");
            if (!lect.exists())
            {
                lect.createNewFile();
                PrintWriter os = new PrintWriter(lect);
                 BufferedWriter  f = new BufferedWriter (new FileWriter(intake+module+today+".txt",true));
             
             
                for (int row = 0; row < TabStu.getRowCount(); row++) {
                    //f.newLine();
                for (int cols = 0; cols < TabStu.getColumnCount(); cols++) {
       
                f.write((String) TabStu.getValueAt(row, cols)+";");
                //f.write(TabStu.getValueAt(0 , 0)+ ";" +TabStu.getValueAt(0 , 1) + ";"+TabStu.getValueAt(0 , 2)); //+ ";" +
                            //name + ";" + att +  "\n");
    }
                f.write("");
                f.newLine();
                
}
                    //f.write(intake + ";" + module + ";" + time + ";" + TabStu.getValueAt(0 , 0)+ ";" +TabStu.getValueAt(0 , 0) + ";"+TabStu.getValueAt(0 , 2)); //+ ";" +
                            //name + ";" + att +  "\n");
                    f.close();
                    JOptionPane.showMessageDialog(null, "Successfully Saved","Success",JOptionPane.INFORMATION_MESSAGE);
            } else {
            JOptionPane.showMessageDialog(null, "File Already exist","please try again",JOptionPane.INFORMATION_MESSAGE);
        }
       
                
                }
                
            
            catch (IOException e)
            {
                JOptionPane.showMessageDialog(null,"Can't find a text file");
            }       
    }//GEN-LAST:event_butSaveActionPerformed

    private void butBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butBackActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);

        L_Main smain = new L_Main();
        smain.setVisible(true);
    }//GEN-LAST:event_butBackActionPerformed

/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
     
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(L_MarkAtt.class

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(L_MarkAtt.class

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(L_MarkAtt.class

.getName()).log(java.util.logging.Level.SEVERE, null, ex);

        

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(L_MarkAtt.class

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new L_MarkAtt().setVisible(true);
            }
        });
    }
    /*public void setDate(){
    Calendar today = Calendar.getInstance();
    SimpleDateFormat dateFormat = new SimpleDateFormat("EEE, d MMM yyy");
    labDate.setText(dateFormat.format(today));
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabStu;
    private javax.swing.JButton butBack;
    private javax.swing.JButton butGetList;
    private javax.swing.JButton butSave;
    private javax.swing.JComboBox<String> comIntake;
    private javax.swing.JComboBox<String> comTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labDate;
    private javax.swing.JLabel labModuleName;
    // End of variables declaration//GEN-END:variables
}
